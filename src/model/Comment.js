/*
 * DCS (Gitea) API.
 * This documentation describes the DCS (Gitea) API.
 *
 * OpenAPI spec version: 1.15.6a+dcs
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.30
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {User} from './User';

/**
 * The Comment model module.
 * @module model/Comment
 * @version 1.15.6a+dcs
 */
export class Comment {
  /**
   * Constructs a new <code>Comment</code>.
   * Comment represents a comment on a commit or issue
   * @alias module:model/Comment
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>Comment</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Comment} obj Optional instance to populate.
   * @return {module:model/Comment} The populated <code>Comment</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Comment();
      if (data.hasOwnProperty('body'))
        obj.body = ApiClient.convertToType(data['body'], 'String');
      if (data.hasOwnProperty('created_at'))
        obj.createdAt = ApiClient.convertToType(data['created_at'], 'Date');
      if (data.hasOwnProperty('html_url'))
        obj.htmlUrl = ApiClient.convertToType(data['html_url'], 'String');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('issue_url'))
        obj.issueUrl = ApiClient.convertToType(data['issue_url'], 'String');
      if (data.hasOwnProperty('original_author'))
        obj.originalAuthor = ApiClient.convertToType(data['original_author'], 'String');
      if (data.hasOwnProperty('original_author_id'))
        obj.originalAuthorId = ApiClient.convertToType(data['original_author_id'], 'Number');
      if (data.hasOwnProperty('pull_request_url'))
        obj.pullRequestUrl = ApiClient.convertToType(data['pull_request_url'], 'String');
      if (data.hasOwnProperty('updated_at'))
        obj.updatedAt = ApiClient.convertToType(data['updated_at'], 'Date');
      if (data.hasOwnProperty('user'))
        obj.user = User.constructFromObject(data['user']);
    }
    return obj;
  }
}

/**
 * @member {String} body
 */
Comment.prototype.body = undefined;

/**
 * @member {Date} createdAt
 */
Comment.prototype.createdAt = undefined;

/**
 * @member {String} htmlUrl
 */
Comment.prototype.htmlUrl = undefined;

/**
 * @member {Number} id
 */
Comment.prototype.id = undefined;

/**
 * @member {String} issueUrl
 */
Comment.prototype.issueUrl = undefined;

/**
 * @member {String} originalAuthor
 */
Comment.prototype.originalAuthor = undefined;

/**
 * @member {Number} originalAuthorId
 */
Comment.prototype.originalAuthorId = undefined;

/**
 * @member {String} pullRequestUrl
 */
Comment.prototype.pullRequestUrl = undefined;

/**
 * @member {Date} updatedAt
 */
Comment.prototype.updatedAt = undefined;

/**
 * @member {module:model/User} user
 */
Comment.prototype.user = undefined;

