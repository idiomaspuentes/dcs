/*
 * DCS (Gitea) API.
 * This documentation describes the DCS (Gitea) API.
 *
 * OpenAPI spec version: 1.15.6a+dcs
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.30
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {CommitStatusState} from './CommitStatusState';
import {User} from './User';

/**
 * The CommitStatus model module.
 * @module model/CommitStatus
 * @version 1.15.6a+dcs
 */
export class CommitStatus {
  /**
   * Constructs a new <code>CommitStatus</code>.
   * CommitStatus holds a single status of a single Commit
   * @alias module:model/CommitStatus
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>CommitStatus</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CommitStatus} obj Optional instance to populate.
   * @return {module:model/CommitStatus} The populated <code>CommitStatus</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new CommitStatus();
      if (data.hasOwnProperty('context'))
        obj.context = ApiClient.convertToType(data['context'], 'String');
      if (data.hasOwnProperty('created_at'))
        obj.createdAt = ApiClient.convertToType(data['created_at'], 'Date');
      if (data.hasOwnProperty('creator'))
        obj.creator = User.constructFromObject(data['creator']);
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('status'))
        obj.status = CommitStatusState.constructFromObject(data['status']);
      if (data.hasOwnProperty('target_url'))
        obj.targetUrl = ApiClient.convertToType(data['target_url'], 'String');
      if (data.hasOwnProperty('updated_at'))
        obj.updatedAt = ApiClient.convertToType(data['updated_at'], 'Date');
      if (data.hasOwnProperty('url'))
        obj.url = ApiClient.convertToType(data['url'], 'String');
    }
    return obj;
  }
}

/**
 * @member {String} context
 */
CommitStatus.prototype.context = undefined;

/**
 * @member {Date} createdAt
 */
CommitStatus.prototype.createdAt = undefined;

/**
 * @member {module:model/User} creator
 */
CommitStatus.prototype.creator = undefined;

/**
 * @member {String} description
 */
CommitStatus.prototype.description = undefined;

/**
 * @member {Number} id
 */
CommitStatus.prototype.id = undefined;

/**
 * @member {module:model/CommitStatusState} status
 */
CommitStatus.prototype.status = undefined;

/**
 * @member {String} targetUrl
 */
CommitStatus.prototype.targetUrl = undefined;

/**
 * @member {Date} updatedAt
 */
CommitStatus.prototype.updatedAt = undefined;

/**
 * @member {String} url
 */
CommitStatus.prototype.url = undefined;

