/*
 * DCS (Gitea) API.
 * This documentation describes the DCS (Gitea) API.
 *
 * OpenAPI spec version: 1.15.6a+dcs
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.30
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The User model module.
 * @module model/User
 * @version 1.15.6a+dcs
 */
export class User {
  /**
   * Constructs a new <code>User</code>.
   * User represents a user
   * @alias module:model/User
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>User</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/User} obj Optional instance to populate.
   * @return {module:model/User} The populated <code>User</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new User();
      if (data.hasOwnProperty('active'))
        obj.active = ApiClient.convertToType(data['active'], 'Boolean');
      if (data.hasOwnProperty('avatar_url'))
        obj.avatarUrl = ApiClient.convertToType(data['avatar_url'], 'String');
      if (data.hasOwnProperty('created'))
        obj.created = ApiClient.convertToType(data['created'], 'Date');
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('email'))
        obj.email = ApiClient.convertToType(data['email'], 'String');
      if (data.hasOwnProperty('followers_count'))
        obj.followersCount = ApiClient.convertToType(data['followers_count'], 'Number');
      if (data.hasOwnProperty('following_count'))
        obj.followingCount = ApiClient.convertToType(data['following_count'], 'Number');
      if (data.hasOwnProperty('full_name'))
        obj.fullName = ApiClient.convertToType(data['full_name'], 'String');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('is_admin'))
        obj.isAdmin = ApiClient.convertToType(data['is_admin'], 'Boolean');
      if (data.hasOwnProperty('language'))
        obj.language = ApiClient.convertToType(data['language'], 'String');
      if (data.hasOwnProperty('last_login'))
        obj.lastLogin = ApiClient.convertToType(data['last_login'], 'Date');
      if (data.hasOwnProperty('location'))
        obj.location = ApiClient.convertToType(data['location'], 'String');
      if (data.hasOwnProperty('login'))
        obj.login = ApiClient.convertToType(data['login'], 'String');
      if (data.hasOwnProperty('prohibit_login'))
        obj.prohibitLogin = ApiClient.convertToType(data['prohibit_login'], 'Boolean');
      if (data.hasOwnProperty('repo_languages'))
        obj.repoLanguages = ApiClient.convertToType(data['repo_languages'], ['String']);
      if (data.hasOwnProperty('repo_subjects'))
        obj.repoSubjects = ApiClient.convertToType(data['repo_subjects'], ['String']);
      if (data.hasOwnProperty('restricted'))
        obj.restricted = ApiClient.convertToType(data['restricted'], 'Boolean');
      if (data.hasOwnProperty('starred_repos_count'))
        obj.starredReposCount = ApiClient.convertToType(data['starred_repos_count'], 'Number');
      if (data.hasOwnProperty('visibility'))
        obj.visibility = ApiClient.convertToType(data['visibility'], 'String');
      if (data.hasOwnProperty('website'))
        obj.website = ApiClient.convertToType(data['website'], 'String');
    }
    return obj;
  }
}

/**
 * Is user active
 * @member {Boolean} active
 */
User.prototype.active = undefined;

/**
 * URL to the user's avatar
 * @member {String} avatarUrl
 */
User.prototype.avatarUrl = undefined;

/**
 * @member {Date} created
 */
User.prototype.created = undefined;

/**
 * the user's description
 * @member {String} description
 */
User.prototype.description = undefined;

/**
 * @member {String} email
 */
User.prototype.email = undefined;

/**
 * user counts
 * @member {Number} followersCount
 */
User.prototype.followersCount = undefined;

/**
 * @member {Number} followingCount
 */
User.prototype.followingCount = undefined;

/**
 * the user's full name
 * @member {String} fullName
 */
User.prototype.fullName = undefined;

/**
 * the user's id
 * @member {Number} id
 */
User.prototype.id = undefined;

/**
 * Is the user an administrator
 * @member {Boolean} isAdmin
 */
User.prototype.isAdmin = undefined;

/**
 * User locale
 * @member {String} language
 */
User.prototype.language = undefined;

/**
 * @member {Date} lastLogin
 */
User.prototype.lastLogin = undefined;

/**
 * the user's location
 * @member {String} location
 */
User.prototype.location = undefined;

/**
 * the user's username
 * @member {String} login
 */
User.prototype.login = undefined;

/**
 * Is user login prohibited
 * @member {Boolean} prohibitLogin
 */
User.prototype.prohibitLogin = undefined;

/**
 * DCS Customizations ***_/ Repo languages
 * @member {Array.<String>} repoLanguages
 */
User.prototype.repoLanguages = undefined;

/**
 * Repo subjects
 * @member {Array.<String>} repoSubjects
 */
User.prototype.repoSubjects = undefined;

/**
 * END DCS Customizations ***_/ Is user restricted
 * @member {Boolean} restricted
 */
User.prototype.restricted = undefined;

/**
 * @member {Number} starredReposCount
 */
User.prototype.starredReposCount = undefined;

/**
 * User visibility level option: public, limited, private
 * @member {String} visibility
 */
User.prototype.visibility = undefined;

/**
 * the user's website
 * @member {String} website
 */
User.prototype.website = undefined;

