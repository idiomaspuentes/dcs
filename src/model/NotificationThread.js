/*
 * DCS (Gitea) API.
 * This documentation describes the DCS (Gitea) API.
 *
 * OpenAPI spec version: 1.15.6a+dcs
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.30
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {NotificationSubject} from './NotificationSubject';
import {Repository} from './Repository';

/**
 * The NotificationThread model module.
 * @module model/NotificationThread
 * @version 1.15.6a+dcs
 */
export class NotificationThread {
  /**
   * Constructs a new <code>NotificationThread</code>.
   * NotificationThread expose Notification on API
   * @alias module:model/NotificationThread
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>NotificationThread</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/NotificationThread} obj Optional instance to populate.
   * @return {module:model/NotificationThread} The populated <code>NotificationThread</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new NotificationThread();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('pinned'))
        obj.pinned = ApiClient.convertToType(data['pinned'], 'Boolean');
      if (data.hasOwnProperty('repository'))
        obj.repository = Repository.constructFromObject(data['repository']);
      if (data.hasOwnProperty('subject'))
        obj.subject = NotificationSubject.constructFromObject(data['subject']);
      if (data.hasOwnProperty('unread'))
        obj.unread = ApiClient.convertToType(data['unread'], 'Boolean');
      if (data.hasOwnProperty('updated_at'))
        obj.updatedAt = ApiClient.convertToType(data['updated_at'], 'Date');
      if (data.hasOwnProperty('url'))
        obj.url = ApiClient.convertToType(data['url'], 'String');
    }
    return obj;
  }
}

/**
 * @member {Number} id
 */
NotificationThread.prototype.id = undefined;

/**
 * @member {Boolean} pinned
 */
NotificationThread.prototype.pinned = undefined;

/**
 * @member {module:model/Repository} repository
 */
NotificationThread.prototype.repository = undefined;

/**
 * @member {module:model/NotificationSubject} subject
 */
NotificationThread.prototype.subject = undefined;

/**
 * @member {Boolean} unread
 */
NotificationThread.prototype.unread = undefined;

/**
 * @member {Date} updatedAt
 */
NotificationThread.prototype.updatedAt = undefined;

/**
 * @member {String} url
 */
NotificationThread.prototype.url = undefined;

