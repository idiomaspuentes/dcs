/*
 * DCS (Gitea) API.
 * This documentation describes the DCS (Gitea) API.
 *
 * OpenAPI spec version: 1.15.6a+dcs
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.30
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {PayloadUser} from './PayloadUser';

/**
 * The PayloadCommitVerification model module.
 * @module model/PayloadCommitVerification
 * @version 1.15.6a+dcs
 */
export class PayloadCommitVerification {
  /**
   * Constructs a new <code>PayloadCommitVerification</code>.
   * PayloadCommitVerification represents the GPG verification of a commit
   * @alias module:model/PayloadCommitVerification
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>PayloadCommitVerification</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PayloadCommitVerification} obj Optional instance to populate.
   * @return {module:model/PayloadCommitVerification} The populated <code>PayloadCommitVerification</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new PayloadCommitVerification();
      if (data.hasOwnProperty('payload'))
        obj.payload = ApiClient.convertToType(data['payload'], 'String');
      if (data.hasOwnProperty('reason'))
        obj.reason = ApiClient.convertToType(data['reason'], 'String');
      if (data.hasOwnProperty('signature'))
        obj.signature = ApiClient.convertToType(data['signature'], 'String');
      if (data.hasOwnProperty('signer'))
        obj.signer = PayloadUser.constructFromObject(data['signer']);
      if (data.hasOwnProperty('verified'))
        obj.verified = ApiClient.convertToType(data['verified'], 'Boolean');
    }
    return obj;
  }
}

/**
 * @member {String} payload
 */
PayloadCommitVerification.prototype.payload = undefined;

/**
 * @member {String} reason
 */
PayloadCommitVerification.prototype.reason = undefined;

/**
 * @member {String} signature
 */
PayloadCommitVerification.prototype.signature = undefined;

/**
 * @member {module:model/PayloadUser} signer
 */
PayloadCommitVerification.prototype.signer = undefined;

/**
 * @member {Boolean} verified
 */
PayloadCommitVerification.prototype.verified = undefined;

