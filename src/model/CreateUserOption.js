/*
 * DCS (Gitea) API.
 * This documentation describes the DCS (Gitea) API.
 *
 * OpenAPI spec version: 1.15.6a+dcs
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.30
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The CreateUserOption model module.
 * @module model/CreateUserOption
 * @version 1.15.6a+dcs
 */
export class CreateUserOption {
  /**
   * Constructs a new <code>CreateUserOption</code>.
   * CreateUserOption create user options
   * @alias module:model/CreateUserOption
   * @class
   * @param email {String} 
   * @param password {String} 
   * @param username {String} 
   */
  constructor(email, password, username) {
    this.email = email;
    this.password = password;
    this.username = username;
  }

  /**
   * Constructs a <code>CreateUserOption</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CreateUserOption} obj Optional instance to populate.
   * @return {module:model/CreateUserOption} The populated <code>CreateUserOption</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new CreateUserOption();
      if (data.hasOwnProperty('email'))
        obj.email = ApiClient.convertToType(data['email'], 'String');
      if (data.hasOwnProperty('full_name'))
        obj.fullName = ApiClient.convertToType(data['full_name'], 'String');
      if (data.hasOwnProperty('login_name'))
        obj.loginName = ApiClient.convertToType(data['login_name'], 'String');
      if (data.hasOwnProperty('must_change_password'))
        obj.mustChangePassword = ApiClient.convertToType(data['must_change_password'], 'Boolean');
      if (data.hasOwnProperty('password'))
        obj.password = ApiClient.convertToType(data['password'], 'String');
      if (data.hasOwnProperty('send_notify'))
        obj.sendNotify = ApiClient.convertToType(data['send_notify'], 'Boolean');
      if (data.hasOwnProperty('source_id'))
        obj.sourceId = ApiClient.convertToType(data['source_id'], 'Number');
      if (data.hasOwnProperty('username'))
        obj.username = ApiClient.convertToType(data['username'], 'String');
      if (data.hasOwnProperty('visibility'))
        obj.visibility = ApiClient.convertToType(data['visibility'], 'String');
    }
    return obj;
  }
}

/**
 * @member {String} email
 */
CreateUserOption.prototype.email = undefined;

/**
 * @member {String} fullName
 */
CreateUserOption.prototype.fullName = undefined;

/**
 * @member {String} loginName
 */
CreateUserOption.prototype.loginName = undefined;

/**
 * @member {Boolean} mustChangePassword
 */
CreateUserOption.prototype.mustChangePassword = undefined;

/**
 * @member {String} password
 */
CreateUserOption.prototype.password = undefined;

/**
 * @member {Boolean} sendNotify
 */
CreateUserOption.prototype.sendNotify = undefined;

/**
 * @member {Number} sourceId
 */
CreateUserOption.prototype.sourceId = undefined;

/**
 * @member {String} username
 */
CreateUserOption.prototype.username = undefined;

/**
 * @member {String} visibility
 */
CreateUserOption.prototype.visibility = undefined;

