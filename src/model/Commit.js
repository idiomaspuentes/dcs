/*
 * DCS (Gitea) API.
 * This documentation describes the DCS (Gitea) API.
 *
 * OpenAPI spec version: 1.15.6a+dcs
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.30
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {CommitAffectedFiles} from './CommitAffectedFiles';
import {CommitMeta} from './CommitMeta';
import {RepoCommit} from './RepoCommit';
import {User} from './User';

/**
 * The Commit model module.
 * @module model/Commit
 * @version 1.15.6a+dcs
 */
export class Commit {
  /**
   * Constructs a new <code>Commit</code>.
   * @alias module:model/Commit
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>Commit</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Commit} obj Optional instance to populate.
   * @return {module:model/Commit} The populated <code>Commit</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Commit();
      if (data.hasOwnProperty('author'))
        obj.author = User.constructFromObject(data['author']);
      if (data.hasOwnProperty('commit'))
        obj.commit = RepoCommit.constructFromObject(data['commit']);
      if (data.hasOwnProperty('committer'))
        obj.committer = User.constructFromObject(data['committer']);
      if (data.hasOwnProperty('created'))
        obj.created = ApiClient.convertToType(data['created'], 'Date');
      if (data.hasOwnProperty('files'))
        obj.files = ApiClient.convertToType(data['files'], [CommitAffectedFiles]);
      if (data.hasOwnProperty('html_url'))
        obj.htmlUrl = ApiClient.convertToType(data['html_url'], 'String');
      if (data.hasOwnProperty('parents'))
        obj.parents = ApiClient.convertToType(data['parents'], [CommitMeta]);
      if (data.hasOwnProperty('sha'))
        obj.sha = ApiClient.convertToType(data['sha'], 'String');
      if (data.hasOwnProperty('url'))
        obj.url = ApiClient.convertToType(data['url'], 'String');
    }
    return obj;
  }
}

/**
 * @member {module:model/User} author
 */
Commit.prototype.author = undefined;

/**
 * @member {module:model/RepoCommit} commit
 */
Commit.prototype.commit = undefined;

/**
 * @member {module:model/User} committer
 */
Commit.prototype.committer = undefined;

/**
 * @member {Date} created
 */
Commit.prototype.created = undefined;

/**
 * @member {Array.<module:model/CommitAffectedFiles>} files
 */
Commit.prototype.files = undefined;

/**
 * @member {String} htmlUrl
 */
Commit.prototype.htmlUrl = undefined;

/**
 * @member {Array.<module:model/CommitMeta>} parents
 */
Commit.prototype.parents = undefined;

/**
 * @member {String} sha
 */
Commit.prototype.sha = undefined;

/**
 * @member {String} url
 */
Commit.prototype.url = undefined;

