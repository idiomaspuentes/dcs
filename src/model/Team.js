/*
 * DCS (Gitea) API.
 * This documentation describes the DCS (Gitea) API.
 *
 * OpenAPI spec version: 1.15.6a+dcs
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.30
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {Organization} from './Organization';

/**
 * The Team model module.
 * @module model/Team
 * @version 1.15.6a+dcs
 */
export class Team {
  /**
   * Constructs a new <code>Team</code>.
   * Team represents a team in an organization
   * @alias module:model/Team
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>Team</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Team} obj Optional instance to populate.
   * @return {module:model/Team} The populated <code>Team</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Team();
      if (data.hasOwnProperty('can_create_org_repo'))
        obj.canCreateOrgRepo = ApiClient.convertToType(data['can_create_org_repo'], 'Boolean');
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('includes_all_repositories'))
        obj.includesAllRepositories = ApiClient.convertToType(data['includes_all_repositories'], 'Boolean');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('organization'))
        obj.organization = Organization.constructFromObject(data['organization']);
      if (data.hasOwnProperty('permission'))
        obj.permission = ApiClient.convertToType(data['permission'], 'String');
      if (data.hasOwnProperty('units'))
        obj.units = ApiClient.convertToType(data['units'], ['String']);
    }
    return obj;
  }
}

/**
 * @member {Boolean} canCreateOrgRepo
 */
Team.prototype.canCreateOrgRepo = undefined;

/**
 * @member {String} description
 */
Team.prototype.description = undefined;

/**
 * @member {Number} id
 */
Team.prototype.id = undefined;

/**
 * @member {Boolean} includesAllRepositories
 */
Team.prototype.includesAllRepositories = undefined;

/**
 * @member {String} name
 */
Team.prototype.name = undefined;

/**
 * @member {module:model/Organization} organization
 */
Team.prototype.organization = undefined;

/**
 * Allowed values for the <code>permission</code> property.
 * @enum {String}
 * @readonly
 */
Team.PermissionEnum = {
  /**
   * value: "none"
   * @const
   */
  none: "none",

  /**
   * value: "read"
   * @const
   */
  read: "read",

  /**
   * value: "write"
   * @const
   */
  write: "write",

  /**
   * value: "admin"
   * @const
   */
  admin: "admin",

  /**
   * value: "owner"
   * @const
   */
  owner: "owner"
};
/**
 * @member {module:model/Team.PermissionEnum} permission
 */
Team.prototype.permission = undefined;

/**
 * @member {Array.<String>} units
 */
Team.prototype.units = undefined;

