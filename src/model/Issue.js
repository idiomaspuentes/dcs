/*
 * DCS (Gitea) API.
 * This documentation describes the DCS (Gitea) API.
 *
 * OpenAPI spec version: 1.15.6a+dcs
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.30
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {Label} from './Label';
import {Milestone} from './Milestone';
import {PullRequestMeta} from './PullRequestMeta';
import {RepositoryMeta} from './RepositoryMeta';
import {StateType} from './StateType';
import {User} from './User';

/**
 * The Issue model module.
 * @module model/Issue
 * @version 1.15.6a+dcs
 */
export class Issue {
  /**
   * Constructs a new <code>Issue</code>.
   * Issue represents an issue in a repository
   * @alias module:model/Issue
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>Issue</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Issue} obj Optional instance to populate.
   * @return {module:model/Issue} The populated <code>Issue</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Issue();
      if (data.hasOwnProperty('assignee'))
        obj.assignee = User.constructFromObject(data['assignee']);
      if (data.hasOwnProperty('assignees'))
        obj.assignees = ApiClient.convertToType(data['assignees'], [User]);
      if (data.hasOwnProperty('body'))
        obj.body = ApiClient.convertToType(data['body'], 'String');
      if (data.hasOwnProperty('closed_at'))
        obj.closedAt = ApiClient.convertToType(data['closed_at'], 'Date');
      if (data.hasOwnProperty('comments'))
        obj.comments = ApiClient.convertToType(data['comments'], 'Number');
      if (data.hasOwnProperty('created_at'))
        obj.createdAt = ApiClient.convertToType(data['created_at'], 'Date');
      if (data.hasOwnProperty('due_date'))
        obj.dueDate = ApiClient.convertToType(data['due_date'], 'Date');
      if (data.hasOwnProperty('html_url'))
        obj.htmlUrl = ApiClient.convertToType(data['html_url'], 'String');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('is_locked'))
        obj.isLocked = ApiClient.convertToType(data['is_locked'], 'Boolean');
      if (data.hasOwnProperty('labels'))
        obj.labels = ApiClient.convertToType(data['labels'], [Label]);
      if (data.hasOwnProperty('milestone'))
        obj.milestone = Milestone.constructFromObject(data['milestone']);
      if (data.hasOwnProperty('number'))
        obj._number = ApiClient.convertToType(data['number'], 'Number');
      if (data.hasOwnProperty('original_author'))
        obj.originalAuthor = ApiClient.convertToType(data['original_author'], 'String');
      if (data.hasOwnProperty('original_author_id'))
        obj.originalAuthorId = ApiClient.convertToType(data['original_author_id'], 'Number');
      if (data.hasOwnProperty('pull_request'))
        obj.pullRequest = PullRequestMeta.constructFromObject(data['pull_request']);
      if (data.hasOwnProperty('ref'))
        obj.ref = ApiClient.convertToType(data['ref'], 'String');
      if (data.hasOwnProperty('repository'))
        obj.repository = RepositoryMeta.constructFromObject(data['repository']);
      if (data.hasOwnProperty('state'))
        obj.state = StateType.constructFromObject(data['state']);
      if (data.hasOwnProperty('title'))
        obj.title = ApiClient.convertToType(data['title'], 'String');
      if (data.hasOwnProperty('updated_at'))
        obj.updatedAt = ApiClient.convertToType(data['updated_at'], 'Date');
      if (data.hasOwnProperty('url'))
        obj.url = ApiClient.convertToType(data['url'], 'String');
      if (data.hasOwnProperty('user'))
        obj.user = User.constructFromObject(data['user']);
    }
    return obj;
  }
}

/**
 * @member {module:model/User} assignee
 */
Issue.prototype.assignee = undefined;

/**
 * @member {Array.<module:model/User>} assignees
 */
Issue.prototype.assignees = undefined;

/**
 * @member {String} body
 */
Issue.prototype.body = undefined;

/**
 * @member {Date} closedAt
 */
Issue.prototype.closedAt = undefined;

/**
 * @member {Number} comments
 */
Issue.prototype.comments = undefined;

/**
 * @member {Date} createdAt
 */
Issue.prototype.createdAt = undefined;

/**
 * @member {Date} dueDate
 */
Issue.prototype.dueDate = undefined;

/**
 * @member {String} htmlUrl
 */
Issue.prototype.htmlUrl = undefined;

/**
 * @member {Number} id
 */
Issue.prototype.id = undefined;

/**
 * @member {Boolean} isLocked
 */
Issue.prototype.isLocked = undefined;

/**
 * @member {Array.<module:model/Label>} labels
 */
Issue.prototype.labels = undefined;

/**
 * @member {module:model/Milestone} milestone
 */
Issue.prototype.milestone = undefined;

/**
 * @member {Number} _number
 */
Issue.prototype._number = undefined;

/**
 * @member {String} originalAuthor
 */
Issue.prototype.originalAuthor = undefined;

/**
 * @member {Number} originalAuthorId
 */
Issue.prototype.originalAuthorId = undefined;

/**
 * @member {module:model/PullRequestMeta} pullRequest
 */
Issue.prototype.pullRequest = undefined;

/**
 * @member {String} ref
 */
Issue.prototype.ref = undefined;

/**
 * @member {module:model/RepositoryMeta} repository
 */
Issue.prototype.repository = undefined;

/**
 * @member {module:model/StateType} state
 */
Issue.prototype.state = undefined;

/**
 * @member {String} title
 */
Issue.prototype.title = undefined;

/**
 * @member {Date} updatedAt
 */
Issue.prototype.updatedAt = undefined;

/**
 * @member {String} url
 */
Issue.prototype.url = undefined;

/**
 * @member {module:model/User} user
 */
Issue.prototype.user = undefined;

