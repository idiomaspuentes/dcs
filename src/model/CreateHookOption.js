/*
 * DCS (Gitea) API.
 * This documentation describes the DCS (Gitea) API.
 *
 * OpenAPI spec version: 1.15.6a+dcs
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.30
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {CreateHookOptionConfig} from './CreateHookOptionConfig';

/**
 * The CreateHookOption model module.
 * @module model/CreateHookOption
 * @version 1.15.6a+dcs
 */
export class CreateHookOption {
  /**
   * Constructs a new <code>CreateHookOption</code>.
   * CreateHookOption options when create a hook
   * @alias module:model/CreateHookOption
   * @class
   * @param config {module:model/CreateHookOptionConfig} 
   * @param type {module:model/CreateHookOption.TypeEnum} 
   */
  constructor(config, type) {
    this.config = config;
    this.type = type;
  }

  /**
   * Constructs a <code>CreateHookOption</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CreateHookOption} obj Optional instance to populate.
   * @return {module:model/CreateHookOption} The populated <code>CreateHookOption</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new CreateHookOption();
      if (data.hasOwnProperty('active'))
        obj.active = ApiClient.convertToType(data['active'], 'Boolean');
      if (data.hasOwnProperty('branch_filter'))
        obj.branchFilter = ApiClient.convertToType(data['branch_filter'], 'String');
      if (data.hasOwnProperty('config'))
        obj.config = CreateHookOptionConfig.constructFromObject(data['config']);
      if (data.hasOwnProperty('events'))
        obj.events = ApiClient.convertToType(data['events'], ['String']);
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
    }
    return obj;
  }
}

/**
 * @member {Boolean} active
 * @default false
 */
CreateHookOption.prototype.active = false;

/**
 * @member {String} branchFilter
 */
CreateHookOption.prototype.branchFilter = undefined;

/**
 * @member {module:model/CreateHookOptionConfig} config
 */
CreateHookOption.prototype.config = undefined;

/**
 * @member {Array.<String>} events
 */
CreateHookOption.prototype.events = undefined;

/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
CreateHookOption.TypeEnum = {
  /**
   * value: "dingtalk"
   * @const
   */
  dingtalk: "dingtalk",

  /**
   * value: "discord"
   * @const
   */
  discord: "discord",

  /**
   * value: "gitea"
   * @const
   */
  gitea: "gitea",

  /**
   * value: "gogs"
   * @const
   */
  gogs: "gogs",

  /**
   * value: "msteams"
   * @const
   */
  msteams: "msteams",

  /**
   * value: "slack"
   * @const
   */
  slack: "slack",

  /**
   * value: "telegram"
   * @const
   */
  telegram: "telegram",

  /**
   * value: "feishu"
   * @const
   */
  feishu: "feishu"
};
/**
 * @member {module:model/CreateHookOption.TypeEnum} type
 */
CreateHookOption.prototype.type = undefined;

