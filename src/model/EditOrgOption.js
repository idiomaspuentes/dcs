/*
 * DCS (Gitea) API.
 * This documentation describes the DCS (Gitea) API.
 *
 * OpenAPI spec version: 1.15.6a+dcs
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.30
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The EditOrgOption model module.
 * @module model/EditOrgOption
 * @version 1.15.6a+dcs
 */
export class EditOrgOption {
  /**
   * Constructs a new <code>EditOrgOption</code>.
   * EditOrgOption options for editing an organization
   * @alias module:model/EditOrgOption
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>EditOrgOption</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/EditOrgOption} obj Optional instance to populate.
   * @return {module:model/EditOrgOption} The populated <code>EditOrgOption</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new EditOrgOption();
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('full_name'))
        obj.fullName = ApiClient.convertToType(data['full_name'], 'String');
      if (data.hasOwnProperty('location'))
        obj.location = ApiClient.convertToType(data['location'], 'String');
      if (data.hasOwnProperty('repo_admin_change_team_access'))
        obj.repoAdminChangeTeamAccess = ApiClient.convertToType(data['repo_admin_change_team_access'], 'Boolean');
      if (data.hasOwnProperty('visibility'))
        obj.visibility = ApiClient.convertToType(data['visibility'], 'String');
      if (data.hasOwnProperty('website'))
        obj.website = ApiClient.convertToType(data['website'], 'String');
    }
    return obj;
  }
}

/**
 * @member {String} description
 */
EditOrgOption.prototype.description = undefined;

/**
 * @member {String} fullName
 */
EditOrgOption.prototype.fullName = undefined;

/**
 * @member {String} location
 */
EditOrgOption.prototype.location = undefined;

/**
 * @member {Boolean} repoAdminChangeTeamAccess
 */
EditOrgOption.prototype.repoAdminChangeTeamAccess = undefined;

/**
 * Allowed values for the <code>visibility</code> property.
 * @enum {String}
 * @readonly
 */
EditOrgOption.VisibilityEnum = {
  /**
   * value: "public"
   * @const
   */
  _public: "public",

  /**
   * value: "limited"
   * @const
   */
  limited: "limited",

  /**
   * value: "private"
   * @const
   */
  _private: "private"
};
/**
 * possible values are `public`, `limited` or `private`
 * @member {module:model/EditOrgOption.VisibilityEnum} visibility
 */
EditOrgOption.prototype.visibility = undefined;

/**
 * @member {String} website
 */
EditOrgOption.prototype.website = undefined;

