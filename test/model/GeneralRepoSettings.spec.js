/*
 * DCS (Gitea) API.
 * This documentation describes the DCS (Gitea) API.
 *
 * OpenAPI spec version: 1.15.6a+dcs
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.30
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.dcs);
  }
}(this, function(expect, dcs) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('GeneralRepoSettings', function() {
      beforeEach(function() {
        instance = new dcs.GeneralRepoSettings();
      });

      it('should create an instance of GeneralRepoSettings', function() {
        // TODO: update the code to test GeneralRepoSettings
        expect(instance).to.be.a(dcs.GeneralRepoSettings);
      });

      it('should have the property httpGitDisabled (base name: "http_git_disabled")', function() {
        // TODO: update the code to test the property httpGitDisabled
        expect(instance).to.have.property('httpGitDisabled');
        // expect(instance.httpGitDisabled).to.be(expectedValueLiteral);
      });

      it('should have the property lfsDisabled (base name: "lfs_disabled")', function() {
        // TODO: update the code to test the property lfsDisabled
        expect(instance).to.have.property('lfsDisabled');
        // expect(instance.lfsDisabled).to.be(expectedValueLiteral);
      });

      it('should have the property migrationsDisabled (base name: "migrations_disabled")', function() {
        // TODO: update the code to test the property migrationsDisabled
        expect(instance).to.have.property('migrationsDisabled');
        // expect(instance.migrationsDisabled).to.be(expectedValueLiteral);
      });

      it('should have the property mirrorsDisabled (base name: "mirrors_disabled")', function() {
        // TODO: update the code to test the property mirrorsDisabled
        expect(instance).to.have.property('mirrorsDisabled');
        // expect(instance.mirrorsDisabled).to.be(expectedValueLiteral);
      });

      it('should have the property starsDisabled (base name: "stars_disabled")', function() {
        // TODO: update the code to test the property starsDisabled
        expect(instance).to.have.property('starsDisabled');
        // expect(instance.starsDisabled).to.be(expectedValueLiteral);
      });

      it('should have the property timeTrackingDisabled (base name: "time_tracking_disabled")', function() {
        // TODO: update the code to test the property timeTrackingDisabled
        expect(instance).to.have.property('timeTrackingDisabled');
        // expect(instance.timeTrackingDisabled).to.be(expectedValueLiteral);
      });

    });
  });

}));
